---
import type { Preload } from '@/types/Preload';
import SpaceBackground from '@components/effects/SpaceBackground.astro';
import ScrollAnimations from '@components/effects/ScrollAnimations.astro';
import SEO from '@components/seo/SEO.astro';
import SkipLink from '@components/accessibility/SkipLink.astro';
import FocusManager from '@components/accessibility/FocusManager.astro';
import UmamiTracker from '@components/analytics/UmamiTracker.astro';
import '@fontsource-variable/noto-serif-jp';
import '@fontsource/space-mono/400.css';
import '@fontsource/space-mono/700.css';
import '@styles/global.css';
import { ClientRouter } from 'astro:transitions';
import DesktopSideNav from '@components/ui/DesktopSideNav.astro';
import MobileNav from '@components/ui/MobileNav.astro';

export interface Props {
  title: string;
  description: string;
  preload?: Array<Preload>;
  canonical?: string;
  image?: string;
  hideMenu?: boolean;
  spaceBackgroundColor?: string;
}

const {
  title = 'Moura.ar - Agustín Moura',
  description = 'Sitio web personal de Agustín Moura',
  image = '/og-image.jpg',
  canonical = new URL(Astro.url.pathname, Astro.site),
  preload = [],
  hideMenu = false,
  spaceBackgroundColor = '#10100E',
} = Astro.props;

const canonicalURL = new URL(canonical, Astro.url);

const backgroundConfig = {
  starDensity: 0.0014,
  minTwinkleSpeed: 0.4,
  maxTwinkleSpeed: 1.5,
  minDelay: 2000,
  maxDelay: 6000,
  starColor: '#ecad22',
  trailColor: '#e0c587',
  starWidth: 15,
  starHeight: 2,
  backgroundColor: spaceBackgroundColor,
  gravityEnabled: true,
  gravityStrength: 80000,
  mouseGravityEnabled: true,
  mouseGravityStrength: 1.2,
  mouseGravityRadius: 0.12,
};
---

<!doctype html>
<html lang="es">
  <head>
    <SEO
      title={title}
      description={description}
      image={image}
      canonical={canonicalURL}
      preload={preload}
    />
    <ClientRouter />
  </head>
  <body class="min-h-svh bg-background text-foreground antialiased overflow-x-hidden">
    <SpaceBackground {...backgroundConfig} />
    <ScrollAnimations />
    <FocusManager />
    {
      !hideMenu && (
        <>
          <DesktopSideNav />
          <MobileNav />
        </>
      )
    }
    <main id="main-content" tabindex="-1" class="relative z-10">
      <slot />
    </main>

    <!-- Umami Analytics Tracker - Only in production -->
    {
      import.meta.env.NODE_ENV === 'production' && (
        <UmamiTracker
          enableScrollTracking={true}
          enableEngagementTracking={true}
          enableFormTracking={true}
          enableDownloadTracking={true}
        />
      )
    }

    <!-- Simplified Performance Monitoring -->
    <script>
      // Only register Service Worker in production
      if (
        'serviceWorker' in navigator &&
        location.hostname !== 'localhost' &&
        location.hostname !== '127.0.0.1' &&
        !location.hostname.includes('localhost')
      ) {
        window.addEventListener('load', () => {
          navigator.serviceWorker
            .register('/sw.js')
            .then((registration) => {
              console.log('SW registered:', registration);
            })
            .catch((error) => {
              console.log('SW registration failed:', error);
            });
        });
      }

      // Simplified performance monitoring
      if ('PerformanceObserver' in window) {
        const observer = new PerformanceObserver((list) => {
          const entries = list.getEntries();
          entries.forEach((entry) => {
            if (entry.entryType === 'largest-contentful-paint') {
              console.log('LCP:', entry.startTime);
            }
          });
        });

        observer.observe({
          entryTypes: ['largest-contentful-paint'],
        });
      }
    </script>
  </body>
</html>
